spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASS}
  application:
    name: core
  kafka:
    consumer:
      auto-offset-reset: earliest
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${BROKER_URL}
          minPartitionCount: 1
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
    function:
      definition: telegramDataCmd
      function:
        bindings:
          telegramDataCmd-out-0: coreDataMessage
      bindings:
        telegramDataCmd:
          destination: telegram.data.command
          group: ${spring.application.name}
        coreDataMessage:
          destination: core.data.message

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

security:
  token: 423F4528482B4D6251655468576D5A7134743777397A24432646294A404E6352
