spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASS}
  application:
    name: core
  kafka:
    consumer:
      auto-offset-reset: earliest
  cloud:
    function:
      definition: telegramDataCmd
    stream:
      kafka:
        binder:
          brokers: ${BROKER_URL}
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
      default:
        content-type: message/protobuf-json
      bindings:
        telegramDataCmd-in-0:
          destination: telegram.data.command
          group: ${spring.application.name}
        coreDataEvent-out-0:
          destination: core.data.event

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

security:
  token: 423F4528482B4D6251655468576D5A7134743777397A24432646294A404E6352
